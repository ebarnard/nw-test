name: Pull Request Audit
on:
  pull_request

jobs:
  branch_up_to_date:
    name: Branch Up To Date
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # We need full history to be able to list commits between two refs.
          fetch-depth: 0

      - name: Hide old comments
        uses: int128/hide-comment-action@v1
        with:
          ends-with: |
            <!-- branch_up_to_date_notification -->

      - name: Check that pull request branch is up-to-date
        run: |
          set -eu
          COMMITS=$(git log --full-history --pretty=oneline 'origin/${{ github.base_ref }}..origin/${{ github.head_ref }}')
          if [ "$COMMITS" == "" ]
          then
            exit 1
          fi

      - name: Add comment describing the problem
        if: ${{ failure() }}
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const message = `:warning: This PR is out of date. Rebase it onto "${{ github.base_ref }}".

            This can be done from the GitHub website by using the "Update with rebase" option. Do not use the "Update with merge commit" option.
            !["Update with rebase" on the GitHub website](https://raw.githubusercontent.com/ebarnard/nw-test/assets/update-with-rebase.png)
            <!-- branch_up_to_date_notification -->`;

            github.rest.issues.createComment({
              issue_number: ${{ github.event.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            })

  forbid_merge_commits:
    name: Forbid Merge Commits
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # We need full history to be able to list commits between two refs.
          fetch-depth: 0

      - name: Hide old comments
        uses: int128/hide-comment-action@v1
        with:
          ends-with: |
            <!-- forbid_merge_commits_notification -->

      - name: Check for merge commits
        run: |
          set -eu
          MERGE_COMMITS=$(git log --full-history --merges --pretty=oneline 'origin/${{ github.base_ref }}..origin/${{ github.head_ref }}')
          # This will be empty if the base ref is not a parent of the head ref.
          # This is fine as GitHub will mark the PR as out-of-date.
          if [ "$MERGE_COMMITS" != "" ]
          then
            echo "Merge commits:"
            echo "$MERGE_COMMITS"
            exit 1
          fi

      - name: Add comment describing the problem
        if: ${{ failure() }}
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: ${{ github.event.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: ':warning: This PR contains merge commits. Remove them before merging this PR.<!-- forbid_merge_commits_notification -->'
            })